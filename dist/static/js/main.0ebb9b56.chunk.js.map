{"version":3,"sources":["components/layout/signinlink.js","store/actions/authactions.js","components/layout/signoutlink.js","components/layout/navbar.js","components/dashboard/notifications.js","components/event/eventsummary.js","components/event/eventlist.js","components/dashboard/dasboard.js","components/event/eventdetails.js","components/auth/signin.js","components/auth/signup.js","components/event/createevent.js","store/actions/eventactions.js","App.js","serviceWorker.js","store/reducers/authreducer.js","store/reducers/eventreducer.js","store/reducers/rootreducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","signinlink","signoutlink","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","Eventsummary","_ref","event","title","authorFirstName","authorLastName","createdAt","toString","calendar","Eventlist","events","eventsummary","Dashboard","_this$props","this","eventlist","dashboard_notifications","react_router","Component","compose","firestore","ordered","evnets","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","src","alt","height","width","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","Createevent","createevent","history","push","classname","authorId","add","objectSpread","Date","App","navbar","exact","path","component","Eventdetails","Boolean","window","location","hostname","initState","authreducer","arguments","length","undefined","action","message","eventreducer","rootreducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ebb9b56.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom' \r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authactions'\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n     return (\r\n\r\n            <ul className=\"right\">\r\n             <li> <NavLink to ='/createvent'>New Event</NavLink></li>\r\n             <li><a onClick={props.signOut}> Log Out</a></li>\r\n             <li> <NavLink to ='/' className='btn btn-floating pink lighten-1'>\r\n             {props.profile.initials}\r\n             </NavLink>\r\n             </li>\r\n            </ul>\r\n    \r\n     \r\n     )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n     return{\r\n         \r\n          signOut: () =>dispatch(signOut())\r\n\r\n     }\r\n}   \r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn =(credentials) => {\r\n\r\n    return(dispatch,getState,{getFirebase}) =>{\r\n\r\n       const firebase =getFirebase();\r\n      \r\n       firebase.auth().signInWithEmailAndPassword(\r\n\r\n        credentials.email,\r\n        credentials.password\r\n       ).then(() =>{\r\n\r\n                 dispatch({type:'LOGIN_SUCCESS'})  \r\n\r\n       }).catch((err) =>{\r\n\r\n            \r\n                dispatch({type:'LOGIN_ERROR',err})\r\n       });\r\n\r\n    }\r\n\r\n      \r\n\r\n\r\n}\r\n\r\nexport const signOut = ()=>{\r\n\r\n    return(dispatch,getState,{getFirebase})=>{\r\n\r\n\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=> {\r\n        \r\n             dispatch({type:'SIGNOUT_SUCCESS'})\r\n        \r\n       })\r\n    }\r\n}\r\n\r\nexport const signUp= (newUser)=>{\r\n\r\n  return(dispatch,getState,{getFirebase,getFirestore}) =>{\r\n\r\n\r\n     const firebase = getFirebase();\r\n     const firestore = getFirestore();\r\n\r\n     firebase.auth().createUserWithEmailAndPassword(\r\n\r\n        newUser.email,\r\n        newUser.password,\r\n     ).then((resp)  =>{\r\n\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n     }).then(()=>{\r\n\r\n           dispatch({type: 'SINGUP_SUCCESS'})\r\n     }).catch(err=>{\r\n\r\n          dispatch({type: 'SINGUP_ERROR',err})\r\n\r\n     })\r\n  }\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom' \r\n\r\nconst SignedOutLinks = () => {\r\n\r\n     return (\r\n\r\n            <ul className=\"right\">\r\n             <li> <NavLink to ='/signup'>Signup</NavLink></li>\r\n             <li> <NavLink to ='/signin'>Login</NavLink></li>\r\n           \r\n            </ul>\r\n    \r\n     \r\n     )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom' \r\nimport SignedInLinks from './signinlink'\r\nimport SignedOutLinks from './signoutlink'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\nconst{auth,profile} =props;\r\n//console.log(auth);\r\nconst links = auth.uid ?<SignedInLinks profile={profile}/>: <SignedOutLinks/>;\r\n     return (\r\n\r\n             <nav className=\"purple\">\r\n                <div className=\"container\">\r\n                      <Link to ='/' className=\"brand-logo\">Event Planner </Link>\r\n                      {links}\r\n                </div>\r\n             </nav>\r\n    \r\n     \r\n     )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n      console.log(state);\r\n\r\n      return{\r\n\r\n               auth:state.firebase.auth,\r\n               profile:state.firebase.profile\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications =(props)=>{\r\n      const {notifications}= props;\r\n\r\n\r\n       return(\r\n        <div className = \"section\">\r\n        <div className = \"card z-depth-0\">\r\n        <div className = \"card-content\">\r\n        <span className = \"card-title\">Notifications</span>\r\n        <ul className = \"notifications\">\r\n              {notifications && notifications.map(item => {\r\n                    return (\r\n                          <li key={item.id}>\r\n                          <span className = \"pink-text\">{item.user}</span>\r\n                          <span >{item.content}</span>\r\n                          <div className = \"grey-text note-date\">  \r\n                          {moment(item.time.toDate()).fromNow()}\r\n                          </div>\r\n                          </li>\r\n                    )\r\n              })} \r\n        </ul>\r\n        </div>\r\n        </div>\r\n        </div>\r\n       )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Eventsummary = ({event}) => {\r\n\r\nreturn(\r\n    \r\n\r\n      \r\n      <div className=\"event list\">\r\n            <div  className=\"card z-depth-0 event-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\"><h5>{event.title}</h5></span>\r\n                    <p>Posted by {event.authorFirstName} {event.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(event.createdAt.toDate().toString()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n         </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Eventsummary","import React, { Component } from 'react'\r\nimport Eventsummary from './eventsummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Eventlist =({events}) => {\r\n\r\n\r\n    return(\r\n\r\n\r\n    <div className=\"event list\">\r\n           \r\n       {events && events.map(event=>{\r\n\r\n            return(\r\n                <Link to ={'/event/'+event.id} key={event.id}>\r\n                <Eventsummary event={event} />\r\n                </Link>\r\n            )\r\n       })}\r\n    \r\n    \r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Eventlist","import React, { Component } from 'react'\r\nimport Notifications from './notifications'\r\nimport Eventlist from '../event/eventlist'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect}  from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component{\r\n  \r\n   render(){\r\n     //console.log(this.props);\r\n     const{events,auth,notifications} = this.props;\r\n     if (!auth.uid) {\r\n     \r\n       return (<Redirect to = '/signin' />)\r\n     }\r\n     return(\r\n\r\n             <div className = \"dashboard container\"> \r\n          \r\n                <div className = \"row\">\r\n\r\n                  \r\n                  \r\n                   <div className=\"col s12 m6\">\r\n                   \r\n                        <Eventlist events={events}/>\r\n                   \r\n                   </div> \r\n                \r\n                  \r\n\r\n                   <div className=\"col s12 m5 offset-m1\">\r\n                   \r\n                        <Notifications notifications = {notifications}/>\r\n                   \r\n                   </div> \r\n                \r\n                </div>\r\n            </div>\r\n     )\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps =(state) =>{\r\n   console.log(state);\r\n   return {\r\n      events: state.firestore.ordered.evnets,\r\n      auth:state.firebase.auth,\r\n      notifications: state.firestore.ordered.notifications\r\n   }\r\n}\r\n\r\n//export default connect(mapStateToProps)(Dashboard)\r\n\r\nexport default compose(\r\n  \r\n   connect(mapStateToProps),\r\n   firestoreConnect([\r\n      {collection: 'evnets',orderBy:['createdAt', 'desc']},\r\n      {collection: 'notifications',limit: 3,orderBy: ['time', 'desc']}\r\n      \r\n   ])\r\n\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Eventdetails = (props) => {\r\n  \r\n  const id = props.match.params.id;\r\n  console.log(props);\r\n  const {event,auth} =props;\r\n\r\n  if (!auth.uid) {\r\n     \r\n   return (<Redirect to = '/signin' />)\r\n }\r\n  if (event){\r\n\r\n    return(\r\n    <div className=\"container section Event details\">\r\n\r\n    <div  className=\"card z-depth-0\">\r\n       \r\n       <div  className=\"card-content\">\r\n          <span className=\"card-title\"><h5>{event.title}</h5></span>\r\n          <p>{event.content}</p>  \r\n        </div>\r\n    \r\n       <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>Posted by {event.authorFirstName} {event.authorLastName}</div>\r\n          <div>{moment(event.createdAt.toDate().toString()).calendar()}</div>\r\n       </div>                      \r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n    )\r\n  }else {  \r\n    \r\n    return(\r\n          <div className=\"container center\">\r\n          <p>Loading project...</p>\r\n          </div>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n\r\n //console.log(state);\r\n const id = ownProps.match.params.id;\r\n const events = state.firestore.data.evnets;\r\n const event = events ? events[id]: null;\r\n \r\n  return{\r\n     event:event,\r\n     auth:state.firebase.auth\r\n  \r\n  }\r\n} \r\n\r\n\r\n//export default Eventdetails;\r\nexport default compose(\r\nconnect(mapStateToProps),\r\nfirestoreConnect([\r\n\r\n{collection:'evnets'}\r\n\r\n])\r\n  \r\n)(Eventdetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authactions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Signin extends Component {\r\n  state={\r\n   \r\n    email: '',\r\n    password: ''\r\n          \r\n\r\n  }\r\n\r\n  handleChange = (e) =>{\r\n\r\n    \r\n    this.setState({\r\n\r\n         [e.target.id]:e.target.value\r\n       \r\n    })\r\n  }\r\n\r\n\r\n  handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n    //onsole.log(this.state);\r\n    this.props.signIn(this.state);\r\n  }\r\n  \r\n  render() {\r\n    const{authError,auth} =this.props;\r\n    \r\n    if (auth.uid) {\r\n     \r\n      return (<Redirect to = '/' />)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n         <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <center><img src=\"../img/logo.png\" alt=\"Logo SK\"  height=\"150\" width=\"150\"></img></center>\r\n\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                        \r\n                         <br/>\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"email\">Email</label>\r\n                         <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"password\">Password</label>\r\n                         <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                         <div className=\"red-text center text-darken-3\"> \r\n                           {authError?<p><strong>{authError}</strong></p>:null}\r\n                         </div>\r\n                        </div>\r\n\r\n          </form>\r\n         \r\n         \r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n\r\n    authError:state.auth.authError,\r\n    auth:state.firebase.auth\r\n\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n     signIn:(creds)=>dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin)\r\n\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authactions'\r\n\r\nclass Signup extends Component {\r\n  state={\r\n   \r\n    email: '',\r\n    password: '',\r\n    firstName:'',\r\n    lastName:''\r\n          \r\n\r\n  }\r\n\r\n  handleChange = (e) =>{\r\n\r\n    \r\n    this.setState({\r\n\r\n         [e.target.id]:e.target.value\r\n       \r\n    })\r\n  }\r\n\r\n\r\n  handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.signUp(this.state);\r\n\r\n  }\r\n  \r\n  render() {\r\n    const{auth,authError} =this.props;\r\n    if (auth.uid) {\r\n   \r\n      return (<Redirect to = '/' />)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n         <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                        \r\n                         <br/>\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"email\">Email</label>\r\n                         <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"password\">Password</label>\r\n                         <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"firstName\">First Name</label>\r\n                         <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"lastName\">Last Name</label>\r\n                         <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                         <div className=\"red-text center text-darken-3\"> \r\n                           {authError?<p><strong>{authError}</strong></p>:null}\r\n                         </div>\r\n                        </div>\r\n\r\n          </form>\r\n         \r\n         \r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n\r\n  return{\r\n\r\n    auth:state.firebase.auth,\r\n    authError:state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n\r\n  return{\r\n\r\n    signUp:(newUser) => dispatch(signUp(newUser))\r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup)\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createevent} from '../../store/actions/eventactions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Createevent extends Component {\r\n  state={\r\n   \r\n    title: '',\r\n    content: ''\r\n          \r\n\r\n  }\r\n\r\n  handleChange = (e) =>{\r\n\r\n    \r\n    this.setState({\r\n\r\n         [e.target.id]:e.target.value\r\n       \r\n    })\r\n  }\r\n\r\n\r\n  handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createevent(this.state)\r\n    this.props.history.push('/');\r\n  }\r\n  \r\n  render() {\r\n    const{auth} = this.props;\r\n    if (!auth.uid) {\r\n     \r\n      return (<Redirect to = '/signin' />)\r\n    }\r\n    return (\r\n      <div>\r\n         <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n\r\n            <h5 className=\"grey-text text-darken-3\">Create new event</h5>\r\n                        \r\n                         <br/>\r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"title\">Event Title</label>\r\n                         <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        \r\n                        <div className=\"input-field\">\r\n                         <label htmlFor=\"content\">Event Description</label>\r\n                         <textarea  id=\"content\"  classname=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Create Event</button>\r\n                        </div>\r\n\r\n          </form>\r\n         \r\n         \r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps= (state)=>{\r\n\r\n   return{\r\n\r\n    auth:state.firebase.auth\r\n   \r\n  \r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n  \r\n  return{\r\n\r\n    createevent:(event)=> dispatch(createevent(event))  \r\n  \r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Createevent)\r\n\r\n","export const createevent = (event) =>{\r\n\r\nreturn(dispatch,getState,{getFirebase,getFirestore}) =>{\r\n\r\n// make asyn all to database\r\n\r\nconst firestore = getFirestore(); \r\nconst profile =getState().firebase.profile;\r\nconst authorId =getState().firebase.auth.uid;\r\n\r\nfirestore.collection('evnets').add({\r\n...event,\r\nauthorFirstName:profile.firstName,\r\nauthorLastName:profile.lastName,\r\nauthorId:authorId,\r\ncreatedAt:new Date()\r\n\r\n\r\n }).then(()=>{\r\n\r\n    dispatch({type:'CREATE_EVENT',event});\r\n \r\n}).catch((err)=>{\r\n\r\n    dispatch({type:'CREATE_EVENT_ERROR',err});\r\n\r\n\r\n})\r\n\r\n\r\n   \r\n    \r\n\r\n\r\n}};","import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\nimport { BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport Navbar from './components/layout/navbar'\r\nimport Dashboard from './components/dashboard/dasboard'\r\nimport Eventdetails from './components/event/eventdetails'\r\nimport Signin from './components/auth/signin'\r\nimport Signup from './components/auth/signup'\r\nimport Createevent from './components/event/createevent' \r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar/> \r\n          <switch>\r\n           \r\n            <Route exact path ='/' component={Dashboard}/>\r\n            <Route path ='/event/:id' component={Eventdetails}/>\r\n            <Route exact path ='/signin' component={Signin}/>\r\n            <Route exact path ='/signup' component={Signup}/>\r\n            <Route exact path ='/createvent' component={Createevent}/>\r\n          </switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState={\r\n    authError:null\r\n}\r\n\r\nconst authreducer = (state=initState,action) =>{\r\n\r\n    switch(action.type){\r\n\r\n    case 'LOGIN_ERROR':\r\n        console.log(\"login error\");\r\n        return{\r\n        ...state,\r\n        authError:'Login failed'\r\n        }\r\n    case 'LOGIN_SUCCESS':\r\n        console.log(\"login success\");\r\n        return{\r\n        ...state,\r\n        authError:null\r\n        }\r\n    case 'SIGNOUT_SUCCESS':\r\n         console.log(\"signout success\");\r\n         return state;\r\n    case  'SINGUP_SUCCESS':\r\n         console.log(\"signup success\");\r\n         return{\r\n            ...state,\r\n            authError:null\r\n         }\r\n    case 'SINGUP_ERROR':    \r\n        console.log(\"signup error\");\r\n        return{\r\n            ...state,\r\n            authError:action.err.message\r\n        }\r\n    \r\n\r\n    default:\r\n         return state;\r\n     }\r\n}\r\n\r\nexport default authreducer;\r\n\r\n","const initState={\r\n\r\nevents:[\r\n\r\n    {id:'1',title:'Business meeting',content:'Discuss for immerging business in canada'},\r\n    {id:'2',title:'Meet and greet',content:'Find new opportnities'},\r\n    {id:'3',title:'Coffee break',content:'Relax from work and take break'}\r\n\r\n]\r\n\r\n\r\n    \r\n}\r\n\r\nconst eventreducer = (state=initState,action) =>{\r\n\r\nswitch(action.type){\r\n \r\n  case 'CREATE_EVENT':\r\n     console.log('created event',action.event);\r\n     return state;\r\n  case 'CREATE_EVENT_ERROR':\r\n     console.log('Error in creating event',action.err);\r\n     return state;\r\n  default:\r\n        return state;\r\n}\r\n\r\n}\r\n\r\nexport default eventreducer;\r\n","import authreducer from './authreducer'\r\nimport eventreducer from './eventreducer'\r\nimport { combineReducers } from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootreducer = combineReducers({\r\n   \r\n     auth: authreducer,\r\n     event:eventreducer,\r\n     firestore:firestoreReducer,\r\n     firebase:firebaseReducer\r\n\r\n});\r\n\r\n\r\nexport default rootreducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n  // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyBJN5GD2d9amxVN6EptYfk52hd2H51F4hs\",\r\n    authDomain: \"eventplanner-d7d1c.firebaseapp.com\",\r\n    databaseURL: \"https://eventplanner-d7d1c.firebaseio.com\",\r\n    projectId: \"eventplanner-d7d1c\",\r\n    storageBucket: \"eventplanner-d7d1c.appspot.com\",\r\n    messagingSenderId: \"356098175062\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware,compose} from 'redux'\r\nimport rootreducer from './store/reducers/rootreducer';\r\nimport {Provider} from  'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\r\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\r\nimport fbconfig from './config/fbconfig'\r\n\r\nconst store  = createStore(rootreducer,\r\n    \r\n    compose(\r\n    \r\n        applyMiddleware(thunk.withExtraArgument({getFirestore,getFirebase})),\r\n        reduxFirestore(fbconfig),\r\n        reactReduxFirebase(fbconfig,{useFirestoreForProfile:true, userProfile:'users',attachAuthIsReady:true})\r\n    )   \r\n    );\r\n\r\n    store.firebaseAuthIsReady.then(()=>{\r\n\r\n         \r\n        ReactDOM.render(<Provider store ={store}><App /></Provider>, document.getElementById('root'));\r\n        // If you want your app to work offline and load faster, you can change\r\n        // unregister() to register() below. Note this comes with some pitfalls.\r\n       // Learn more about service workers: https://bit.ly/CRA-PWA\r\n       serviceWorker.unregister();\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}